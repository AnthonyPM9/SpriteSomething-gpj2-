#this file is mostly copied from https://docs.travis-ci.com/user/languages/python/
#it contains the information for automated testing on Github

#this is a python project, designed to be compatible with 3.6+
language: python

# cache pip
cache:
  directories:
    - $HOME/.cache/pip #linux
    - $HOME/Library/Caches/pip #macosx
    - $HOME/AppData/Local/pip/Cache #windows
    - $HOME/upx #upx

#default VM settings
dist: bionic
python: "3.7"
env:
  global:
    - PYTHON_EXECUTABLE="python"
    - UPX_VERSION="3.95"
    - GR_CLI_VERSION="1.3.0"
    - REGEX="^([-\w]*)([.]|$)([\d]|exe|$)([.]|$)([\d]+|$)([-[:alpha:].]+|$)"

# cache
# before_install
# install
### jobs ###
# before_script
# script
# before_cache
# after_success
# before_deploy
# deploy
# after_deploy

# upgrade pip
# install pillow, numpy for app
# install pyinstaller, regex for distilling
install:
  - ${PYTHON_EXECUTABLE} --version
  - "if [ \"${TRAVIS_OS_NAME}\" == \"windows\" ]; then \
      pip --version; \
      pip install -r \"./app_resources/meta/manifests/pip_requirements.txt\"; \
      pip install regex; \
    else \
 	    pip3 --version; \
	    pip3 install -U wheel; \
      pip3 install -r \"./app_resources/meta/manifests/pip_requirements.txt\"; \
    fi"
  - export DEPLOY=yes

jobs:
  include:
    # 3.7 on Bionic Test
    - &tests
      stage: "Unit Tests"
      name: "Python 3.7 on Ubuntu Bionic: Test"
      dist: bionic
      python: "3.7"
      services: xvfb
      before_script: echo "#do nothing before script"
      script: ${PYTHON_EXECUTABLE} tests.py

    # 3.7 on Bionic Build/Deploy
    - &build-deploy
      stage: "Build & Deploy Binaries"
      name: "3.7 on Bionic: Build/Deploy"
      dist: bionic
      python: "3.7"
      services: xvfb
      before_install: sudo apt-get install pcregrep
      skip_cleanup: true
      script:
        #run upx script
        # upx still doesn't quite work with race conditions of downloading vs processing
        # try to beat the race condition by having all this in one line
        #run build script
        #list files to see what was built
#        - "if [ true ]; then \
#            if [ \"${TRAVIS_DIST}\" != \"xenial\" ]; then \
#              bash ./scripts/get_upx.sh; \
#            fi; \
#            ${PYTHON_EXECUTABLE} build.py; \
#            ls; \
#          fi"
        - ${PYTHON_EXECUTABLE} build.py
      after_success:
        #if no tag was submitted, let's build one
        #current: <major>.<minor>.<build_number>
        - "if [ \"${TRAVIS_TAG}\" == \"\" ]; then \
            APP_VERSION=$(head -n 1 ./app_resources/meta/manifests/app_version.txt); \
            export TRAVIS_TAG=\"${APP_VERSION}.${TRAVIS_BUILD_NUMBER}\"; \
          fi; \
          echo \"${TRAVIS_TAG}\" > ./app_resources/meta/manifests/app_version.txt"
        #prepare files to upload
        - bash ./scripts/after_success.sh
        #list binaries
        #save list
        #windows: deploy from filename notes
        #else: deploy the binary
        #there's a line just above the final deployment info that can overwrite to deploy the archive
        - "if [ \"${TRAVIS_OS_NAME}\" == \"windows\" ]; then \
            head -n 1 ../build/filename.txt | cat; \
            export FILES_TO_UPLOAD=$(head -n 1 ../build/filename.txt); \
          else \
            ls -p | pcregrep -M ${REGEX}; \
            export FILES_TO_UPLOAD=$(ls -p | pcregrep -M ${REGEX}); \
          fi; \
          export TRAVIS_TAG=\"v${TRAVIS_TAG}\"" #prepend 'v' to tag name
        - export FILES_TO_UPLOAD=../deploy/* #deploy archive
        #output final deployment info
        - "echo \"Deploy: ${DEPLOY}\""
        - "echo \"Files to Upload: ${FILES_TO_UPLOAD}\""
        - "echo \"Git tag: ${TRAVIS_TAG}\""

      before_deploy:
        - curl https://miketrethewey.github.io/github-release-cli/v${GR_CLI_VERSION}/github-releaser-travis -L --output github-releaser && chmod +x github-releaser
        - export GITHUB_OAUTH_TOKEN=${GITHUB_DEPLOY_KEY}
        - export BODY=$(envsubst < ./RELEASENOTES.md)
        - export FILES=${FILES_TO_UPLOAD}

      deploy:
        provider: script
        script: bash ./github-releaser -draft -verbose
        skip_cleanup: true
        draft: true
        on:
          repo: Artheau/SpriteSomething
          condition: $DEPLOY == "yes"
          branch: travis-test

    # 3.7 on Xenial
    - <<: *tests
      name: "Python 3.7 on Ubuntu Xenial: Test"
      dist: xenial
      python: "3.7"
      services: xvfb
    - <<: *build-deploy
      name: "3.7 on Xenial: Build/No Deploy"
      dist: xenial
      python: "3.7"
      services: xvfb
      before_script:
        - "export DEPLOY=no"
        - "echo \"Deploy: ${DEPLOY}\""

    # 3.6 on Xenial
    - <<: *tests
      name: "Python 3.6 on Ubuntu Xenial: Test"
      dist: xenial
      python: "3.6"
      services: xvfb
    - <<: *build-deploy
      name: "3.6 on Xenial: Build/No Deploy"
      dist: xenial
      python: "3.6"
      services: xvfb
      before_script:
        - "export DEPLOY=no"
        - "echo \"Deploy: ${DEPLOY}\""

    # 3.7 on macOS
    - <<: *tests
      name: "Python 3.7 on MacOSX 10.14 xcode 10.2: Test"
      os: osx
      osx_image: xcode10.2
      python: "3.7"
      services:
      language: shell
      before_install: export PYTHON_EXECUTABLE=python3
    - <<: *build-deploy
      name: "3.7 on MacOSX: Build/Deploy"
      os: osx
      osx_image: xcode10.2
      python: "3.7"
      services:
      language: shell
      before_install: export PYTHON_EXECUTABLE=python3

    # 3.7 on Windows
    - <<: *tests
      name: "Python 3.7 on Windows 10 v1803: Test"
      os: windows
      python: "3.7"
      services: xvfb
      language: shell
      before_install:
        - choco install python
        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - ${PYTHON_EXECUTABLE} get-pip.py
        - ${PYTHON_EXECUTABLE} -m pip install --upgrade pip
        - bash ./scripts/win-before_install.sh
    - <<: *build-deploy
      name: "3.7 on Windows: Build/Deploy"
      os: windows
      python: "3.7"
      services: xvfb
      language: shell
      before_install:
        - choco install python
        - export PATH=/c/Python37:/c/Python37/Scripts:$PATH
        - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
        - ${PYTHON_EXECUTABLE} get-pip.py
        - ${PYTHON_EXECUTABLE} -m pip install --upgrade pip
        - bash ./scripts/win-before_install.sh

notifications:
  email: false
